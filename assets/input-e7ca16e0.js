import{m as k,Y as _,j as $,V as y,o as p,d as v,e as o,n as f,t as n,g as t,A as C,w as u,h as S,D as V,l as x,p as b,q as g,P as w,U as F,G as m,ac as U,ao as N}from"./index-539a8d41.js";const B={class:"FormColor"},D={class:"color_text"},M={class:"color_icon"},A={class:"FormColor confirm_dialog"},P={key:0,class:"title_container"},T={class:"confirm_dialog_title"},j={class:"color_row"},q={class:"name"},z=o("div",{class:"color_pick_row",style:{"{\r\n							'--color'":"color_hex,"}},[o("div",{class:"color_container"},[o("div",{class:"color_container_item color"}),o("div",{class:"color_container_item white"}),o("div",{class:"color_container_item black"}),o("div",{class:"color_pick_button",style:{left:"0%",top:"0%"}},[o("div",{class:"botton_shape"})])]),o("div",{class:"color_pick"},[o("div",{class:"color_pick_button",style:{left:"10px",top:"10%"}},[o("div",{class:"botton_shape"})])])],-1),E={class:"button_container"},G=k({__name:"FormColor",props:{title:String,modelValue:String},setup(c){const a=_(!1);function i(){a.value=!1}function s(){a.value=!1}const r=$({r:0,g:0,b:0}),e=y(()=>`#${Math.round(r.r*255).toString(16).padStart(2,"0")}${Math.round(r.g*255).toString(16).padStart(2,"0")}${Math.round(r.b*255).toString(16).padStart(2,"0")}`);return(l,d)=>(p(),v("div",B,[o("div",{class:"form_item hover",onClick:d[0]||(d[0]=h=>a.value=!0)},[o("div",{class:"color_box",style:f({"--color":c.modelValue})},null,4),o("span",D,n(c.modelValue),1),o("span",M,[t(C,{class:"right"})])]),t(w,{modelValue:a.value,"onUpdate:modelValue":d[1]||(d[1]=h=>a.value=h)},{default:u(()=>[o("div",A,[c.title?(p(),v("div",P,[o("h3",T,n(c.title),1)])):S("",!0),o("div",j,[o("div",{class:"color",style:f({"--color":e.value})},null,4),o("div",q,n(e.value),1)]),z,o("div",E,[t(V,{class:"plain",icon:"cancel",onClick:i},{default:u(()=>[x(n(b(g)("dialog.cancel")),1)]),_:1}),t(V,{icon:"confirm",onClick:s},{default:u(()=>[x(n(b(g)("dialog.confirm")),1)]),_:1})])])]),_:1},8,["modelValue"])]))}});const I=N('<div class="component_title"><h1>Input</h1><h2>输入框</h2></div><p class="c_descr">使用 kinput 类的 input 创建输入框</p><div class="form_buttons_row"><input type="text" class="kinput" placeholder="输入框"></div><p class="c_descr">使用 input_icon_box 创建带图标的输入框</p>',4),Y={class:"form_buttons_row"},H={class:"input_icon_box"},J=o("input",{class:"kinput",placeholder:"输入框"},null,-1),K=o("p",{class:"c_descr"},"使用 ktextarea 类的 textarea 创建简单多行输入框",-1),L=o("textarea",{class:"ktextarea",placeholder:"多行输入框"},null,-1),O=o("br",null,null,-1),Q=o("textarea",{class:"ktextarea",placeholder:"禁用的多行输入框",disabled:""},null,-1),R=o("p",{class:"c_descr"}," 使用 FormTextarea 组件创建复杂多行输入框，会自动调整大小 ",-1),W={class:"c_descr"},X=o("br",null,null,-1),Z=o("p",{class:"c_descr"},"使用 min_line 指定最小行数",-1),oo=o("p",{class:"c_descr"},"使用 FormNum 组件创建数字输入框",-1),eo=o("p",{class:"c_descr"},"使用 FormColor 组件创建颜色输入框（未完成）",-1),to=k({__name:"input",setup(c){const a=_(0),i=_("#000000"),s=_("");return(r,e)=>(p(),v("div",null,[I,o("div",Y,[o("div",H,[t(F),J])]),K,L,O,Q,R,o("p",W,"当前值: "+n(s.value),1),t(m,{placeholder:"多行输入框",modelValue:s.value,"onUpdate:modelValue":e[0]||(e[0]=l=>s.value=l)},null,8,["modelValue"]),X,t(m,{placeholder:"禁用的多行输入框",disabled:"",modelValue:s.value,"onUpdate:modelValue":e[1]||(e[1]=l=>s.value=l)},null,8,["modelValue"]),Z,t(m,{placeholder:"多行输入框",min_line:3,modelValue:s.value,"onUpdate:modelValue":e[2]||(e[2]=l=>s.value=l)},null,8,["modelValue"]),oo,t(U,{modelValue:a.value,"onUpdate:modelValue":e[3]||(e[3]=l=>a.value=l)},null,8,["modelValue"]),eo,t(G,{modelValue:i.value,"onUpdate:modelValue":e[4]||(e[4]=l=>i.value=l),title:""},null,8,["modelValue"])]))}});export{to as default};
